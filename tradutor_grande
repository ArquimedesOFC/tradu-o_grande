<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Tradutor Avançado</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f4f4;
      padding: 20px;
    }

    h1 {
      text-align: center;
    }

    textarea {
      width: 100%;
      height: 150px;
      padding: 10px;
      margin: 10px 0;
      resize: vertical;
      border: 1px solid #ccc;
      border-radius: 5px;
      font-size: 14px;
    }

    button {
      padding: 10px 20px;
      background: #007BFF;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-top: 10px;
    }

    button:hover {
      background: #0056b3;
    }

    .container {
      max-width: 800px;
      margin: auto;
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0px 2px 10px rgba(0,0,0,0.1);
    }

    label {
      font-weight: bold;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Tradutor com Arquivo</h1>

    <label for="text-to-translate">Texto em Inglês:</label>
    <textarea id="text-to-translate" placeholder="Digite aqui o texto em inglês..."></textarea>

    <button onclick="translateText()">Traduzir Texto Curto</button>
    <button id="translate-large-btn" onclick="translateLargeText()">Traduzir Texto Grande</button>

    <label for="translated-text">Texto Traduzido:</label>
    <textarea id="translated-text" readonly placeholder="Tradução aparecerá aqui..."></textarea>
  </div>

  <script>
    const maxChars = 500;

    async function translateText() {
      const text = document.getElementById('text-to-translate').value.trim();
      const output = document.getElementById('translated-text');

      if (!text) {
        alert("Digite algo para traduzir.");
        return;
      }

      output.value = "Traduzindo...";

      try {
        const response = await fetch(`https://api.mymemory.translated.net/get?q=${encodeURIComponent(text)}&langpair=en|pt`);
        const data = await response.json();
        const translated = data.responseData.translatedText;

        output.value = translated;
      } catch (error) {
        console.error('Erro na tradução:', error);
        output.value = "Erro ao traduzir o texto.";
      }
    }

    async function translateLargeText() {
      const inputText = document.getElementById('text-to-translate').value.trim();
      const output = document.getElementById('translated-text');
      const button = document.getElementById('translate-large-btn');

      if (!inputText) {
        alert("Por favor, digite um texto para traduzir.");
        return;
      }

      const blocks = [];
      for (let i = 0; i < inputText.length; i += maxChars) {
        blocks.push(inputText.slice(i, i + maxChars));
      }

      button.disabled = true;
      output.value = "Traduzindo texto grande...";

      let translatedFullText = "";

      for (let i = 0; i < blocks.length; i++) {
        const block = blocks[i];

        try {
          const response = await fetch(`https://api.mymemory.translated.net/get?q=${encodeURIComponent(block)}&langpair=en|pt`);
          const data = await response.json();
          const translated = data.responseData.translatedText;

          translatedFullText += translated + "\n\n";

        } catch (error) {
          console.error('Erro ao traduzir bloco', i + 1, error);
          translatedFullText += `[Erro na tradução do bloco ${i + 1}]\n\n`;
        }
      }

      output.value = "Tradução completa. Baixando arquivo...";

      const blob = new Blob([translatedFullText], { type: 'text/plain;charset=utf-8' });
      const link = document.createElement('a');
      link.href = URL.createObjectURL(blob);
      link.download = 'traducao.txt';
      link.click();

      output.value = translatedFullText;
      button.disabled = false;
    }
  </script>
</body>
</html>
